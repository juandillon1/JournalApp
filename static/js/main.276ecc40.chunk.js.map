{"version":3,"sources":["hooks/useForm.js","firebase/firebaseConfig.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducers.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","uId","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","onChange","placeholder","autoComplete","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NotesAppBar","active","style","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","objNotes","Object","map","Sidebar","signOut","console","log","newNote","Date","getTime","add","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setisLoggedIn","onAuthStateChanged","basename","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"kOAGaA,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GACpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WAAkC,IAAjCC,EAAgC,uDAAjBL,EAC1BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEP,EAAQI,EAAmBF,I,4BCPxCM,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKR,IAASS,YAEdC,EAAqB,IAAIV,IAASW,KAAKC,mBCjBhCC,EACF,cADEA,EAED,eAFCA,EAIG,iBAJHA,EAKM,oBALNA,EAMO,qBANPA,EAOQ,sBAPRA,EASI,mBATJA,EAUI,0BAVJA,EAWK,4BAXLA,EAaI,sBAbJA,EAcY,0BAdZA,EAeE,qBCbFC,EAAW,SAACC,GAAD,MAAU,CAC9BC,KAAMH,EACNI,QAASF,IAWAG,EAAgB,iBAAO,CAChCF,KAAMH,I,iBCdGM,EAAS,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACGb,EAAGc,WAAH,UAAiBF,EAAjB,mBAAsCG,MADzC,cACfC,EADe,OAEfC,EAAQ,GACdD,EAAUE,SAAQ,SAAAC,GACdF,EAAMG,KAAN,aACIC,GAAIF,EAASE,IACVF,EAASG,YANC,kBASdL,GATc,2CAAH,sDCFTM,EAAU,uCAAG,WAAQC,GAAR,mBAAAX,EAAA,4DACL,oDACXY,EAAW,IAAIC,UACZC,OAAO,gBAAiB,gBACjCF,EAASE,OAAO,OAAQH,GAJF,kBAMCI,MALN,mDAKsB,CAC/BC,OAAQ,OACRC,KAAML,IARQ,YAMZM,EANY,QAUVC,GAVU,kCAWUD,EAAKE,OAXf,eAWRC,EAXQ,yBAYPA,EAAUC,YAZH,yBAcFJ,EAAKE,OAdH,oJAAH,sDCqBVG,EAAa,SAACf,EAAIgB,GAAL,MAAe,CACrC7B,KAAMH,EACNI,QAAQ,aACJY,MACGgB,KAIEC,EAAa,SAACjB,EAAIgB,GAAL,MAAe,CACrC7B,KAAMH,EACNI,QAAQ,aACJY,MAAOgB,KAIFE,EAAoB,SAAC3B,GAC9B,8CAAO,WAAM4B,GAAN,eAAA3B,EAAA,sEACiBF,EAAUC,GAD3B,OACGK,EADH,OAEHuB,EAASC,EAASxB,IAFf,2CAAP,uDAMSwB,EAAU,SAAExB,GAAF,MACnB,CACIT,KAAMH,EACNI,QAASQ,IAIJyB,EAAgB,SAACL,GAC1B,8CAAO,WAAQG,EAAUG,GAAlB,iBAAA9B,EAAA,6DACI+B,EAAOD,IAAWxC,KAAlByC,IACHP,EAAKQ,YACER,EAAKQ,WAEVC,EALH,eAKyBT,IACLhB,GANpB,SAOGrB,EAAG+C,IAAH,UAAUH,EAAV,0BAA+BP,EAAKhB,KAAM2B,OAAQF,GAPrD,OAQHN,EAASS,EAAYZ,EAAKhB,GAAIyB,IAC9BI,IAAKC,KAAK,QAASd,EAAKe,MAAO,WAT5B,2CAAP,yDAaSH,EAAc,SAAC5B,EAAIgB,GAAL,MAAe,CACtC7B,KAAMH,EACNI,QAAS,CACLY,KACAgB,KAAK,aACDhB,MACGgB,MA+CFgB,EAAa,SAAChC,GAAD,MAAS,CAC/Bb,KAAMH,EACNI,QAASY,ICjHAiC,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAAChB,GACJA,EJG2B,CAC/BhC,KAAMH,IIHFb,IAASW,OAAOsD,2BAA2BF,EAAOC,GACjDE,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACJnB,EAAUoB,EAAMD,EAAK/C,IAAK+C,EAAKE,cAC/BrB,EAAU9B,QAEboD,OAAM,SAAAC,GACHb,IAAKC,KACD,QAASY,EAAEC,QAAS,SAExBxB,EAAU9B,UA+BTkD,EAAQ,SAAChB,EAAKiB,GAAN,MAAuB,CACxCrD,KAAMH,EACNI,QAAS,CACLmC,MACAiB,iBAYKI,EAAS,iBAAO,CACzBzD,KAAMH,I,OC5DG6D,EAAc,WACvB,IAAM1B,EAAW2B,cACVC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAtCH,QACP,EAA0CvF,EAAQ,CAC9C0E,MAAO,GACPC,SAAU,KAFd,mBAAQgB,EAAR,KAAoBpF,EAApB,KAKOmE,EAAmBiB,EAAnBjB,MAAOC,EAAYgB,EAAZhB,SAUd,OACI,qCACI,oBAAIiB,UAAU,cAAd,mBACA,uBAAMC,SAXM,SAACX,GACjBA,EAAEY,iBACFnC,EAASc,EAAwBC,EAAOC,KASPiB,UAAU,oDAAvC,UACI,uBAAOjE,KAAK,OAAOiE,UAAU,cAAclF,MAAOgE,EAAOqB,SAAUxF,EAAmByF,YAAY,QAAQvF,KAAK,QAAQwF,aAAa,QACpI,uBAAOtE,KAAK,WAAWiE,UAAU,cAAcI,YAAY,WAAWtF,MAAOiE,EAAUoB,SAAUxF,EAAmBE,KAAK,aACzH,wBAAQkB,KAAK,SAASiE,UAAU,4BAA4BM,SAAUX,EAAtE,mBACA,uBACA,sBAAKK,UAAU,wBAAf,UACI,2DACA,sBACIA,UAAU,aACVO,QAhBM,WACtBxC,GDoBG,SAACA,GAAD,MAAc,CACjBhD,IAASW,OAAO8E,gBAAgB/E,GAC/BwD,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACJnB,EAASoB,EAAMD,EAAK/C,IAAK+C,EAAKE,sBCVtB,UAII,qBAAKY,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAcS,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAGV,UAAU,WAAb,SACI,4DAIZ,cAAC,IAAD,CAAMW,GAAG,iBAAiBX,UAAU,OAApC,uC,iBCtCHY,EAAiB,WAC1B,IAAM7C,EAAW2B,cACTmB,EAAajB,aAAa,SAAAC,GAAK,OAAIA,EAAMC,MAAzCe,SACR,EAA0CzG,EAAQ,CAC9CS,KAAM,OACNiE,MAAO,+BACPC,SAAU,SACV+B,UAAW,WAJf,mBAAQf,EAAR,KAAoBpF,EAApB,KAOOE,EAAoCkF,EAApClF,KAAMiE,EAA8BiB,EAA9BjB,MAAOC,EAAuBgB,EAAvBhB,SAAU+B,EAAaf,EAAbe,UAOxBC,EAAc,WAChB,OAAGlG,EAAKmG,OAAOC,QAAU,GACrBlD,EAASlC,EAAS,sBACX,GACCqF,IAAUC,QAASrC,GAGnBC,IAAa+B,GAAa/B,EAASkC,OAAS,GACpDlD,EAASlC,EAAS,mEACX,IAEXkC,EN7B0B,CAC9BhC,KAAMH,KM6BK,IAPHmC,EAASlC,EAAS,wBACX,IASf,OACI,qCACI,oBAAImE,UAAU,cAAd,sBACA,uBAAMC,SAxBS,SAACX,GACpBA,EAAEY,iBACEa,KACAhD,EFCsC,SAACe,EAAOC,EAAUlE,GAChE,OAAO,SAACkD,GACJhD,IAASW,OAAO0F,+BAA+BtC,EAAOC,GACrDE,KADD,uCACO,6BAAA7C,EAAA,6DAAQ8C,EAAR,EAAQA,KAAR,SACGA,EAAKmC,cAAc,CAACjC,YAAavE,IADpC,OAEHkD,EACIoB,EAAMD,EAAK/C,IAAK+C,EAAKE,cAHtB,2CADP,uDAOCC,OAAM,SAACC,GACJb,IAAKC,KACD,QAASY,EAAEC,QAAS,aEZf+B,CAAmCxC,EAAOC,EAAUlE,KAqB7BmF,UAAU,oDAA1C,UAEQa,GAEI,qBAAKb,UAAU,oBAAf,SACKa,IAIb,uBAAO9E,KAAK,OAAOiE,UAAU,cAAcI,YAAY,OAAOvF,KAAK,OAAOC,MAAOD,EAAMwF,aAAa,MAAMF,SAAUxF,IACpH,uBAAOoB,KAAK,OAAOiE,UAAU,cAAcI,YAAY,QAAQvF,KAAK,QAAQC,MAAOgE,EAAOuB,aAAa,MAAMF,SAAUxF,IACvH,uBAAOoB,KAAK,WAAWiE,UAAU,cAAcI,YAAY,WAAWtF,MAAOiE,EAAUlE,KAAK,WAAWsF,SAAUxF,IACjH,uBAAOoB,KAAK,WAAWiE,UAAU,cAAcI,YAAY,mBAAmBtF,MAAOgG,EAAUjG,KAAK,YAAYsF,SAAUxF,IAC1H,wBAAQoB,KAAK,SAASiE,UAAU,iCAAhC,sBACA,cAAC,IAAD,CAAMW,GAAG,cAAcX,UAAU,YAAjC,wCCpDHuB,EAAa,WACtB,OACI,qBAAKvB,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,cAAcC,UAAWjC,IAD/C,IAEI,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,iBAAiBC,UAAWd,IAC9C,cAAC,IAAD,CAAUD,GAAG,wBCRpBgB,EAAc,WACvB,IAAM5D,EAAW2B,cACVkC,EAAUhC,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,SAArCoF,OAaP,OACI,sBAAK5B,UAAU,gBAAf,UACI,kDACA,uBAAOjE,KAAK,OAAOa,GAAG,eAAe/B,KAAK,OAAOgH,MAAO,CAACC,QAAS,QAAS3B,SAT1D,SAACb,GACtB,IAAMvC,EAAOuC,EAAE1E,OAAOmH,MAAM,GACzBhF,GACCgB,EL2DkB,SAAEhB,GAC5B,8CAAO,WAAMgB,EAAUG,GAAhB,iBAAA9B,EAAA,6DACYuB,EAAcO,IAAW1B,MAAjCoF,OACPnD,IAAKC,KACD,CACIC,MAAO,eACPqD,KAAM,cACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,SAAU,WACN1D,IAAK2D,iBATd,SAamBtF,EAAWC,GAb9B,OAaGsF,EAbH,OAcH1E,EAAWS,IAAMiE,EACjBtE,EAASE,EAAcN,IACvBc,IAAK6D,QAhBF,2CAAP,wDK5DiBC,CAAexF,OAOxB,gCACI,wBAAQiD,UAAU,MAAMO,QAdT,WACvBiC,SAASC,cAAc,iBAAiBC,SAahC,qBACA,wBAAQ1C,UAAU,MAAMO,QAlBjB,WACfxC,EAASE,EAAc2D,KAiBf,yBCpBHe,GAAa,WACtB,IAAe/E,EAAQgC,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,SAA3CoF,OACP,EAA+CxH,EAAQwD,GAAvD,mBAAOmC,EAAP,KAAmBpF,EAAnB,KAAsCF,EAAtC,KACOkE,EAAmBoB,EAAnBpB,MAAOtB,EAAY0C,EAAZ1C,KAAMT,EAAMmD,EAANnD,GACdmB,EAAW2B,cAEXkD,EAAWC,iBAAOjF,EAAKhB,IAC7BkG,qBAAU,WACHlF,EAAKhB,KAAOgG,EAASG,UACpBtI,EAAMmD,GACNgF,EAASG,QAAUnF,EAAKhB,MAE7B,CAACgB,EAAMnD,IAEVqI,qBAAU,WACN/E,EAAUJ,EAAWoC,EAAWnD,GAAZ,eAAoBmD,OACzC,CAACA,EAAYhC,IAMhB,OACI,sBAAKiC,UAAU,sBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,iBAAf,UACI,uBAAOjE,KAAK,OAAOqE,YAAY,gBAAgBvF,KAAK,QAAQmF,UAAU,qBAAqBK,aAAa,MAAMvF,MAAO6D,EAAOwB,SAAUxF,IACtI,0BAAUyF,YAAY,gBAAgBvF,KAAK,OAAMmF,UAAU,kBAAkBlF,MAAOuC,EAAM8C,SAAUxF,IAE/FiD,EAAKQ,KACF,qBAAK4B,UAAU,eAAf,SACI,qBAAKS,IAAK7C,EAAKQ,IAAKsC,IAAK9C,EAAKe,aAI9C,wBAAQqB,UAAU,iBAAiBO,QAjBtB,WACjBxC,ENwEqB,SAACnB,GAC1B,8CAAO,WAAMmB,EAAUG,GAAhB,eAAA9B,EAAA,6DACG+B,EAAMD,IAAWxC,KAAKyC,IAC5BM,IAAKC,KACD,CACIC,MAAO,cACPqD,KAAM,cACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,SAAU,WACN1D,IAAK2D,iBATd,SAaG7G,EAAG+C,IAAH,UAAUH,EAAV,0BAA+BvB,IAAMoG,SAbxC,OAcHjF,EAASa,EAAWhC,IACpB6B,IAAK6D,QACL7D,IAAKC,KAAK,gBAAiB,GAAI,WAhB5B,2CAAP,wDMzEauE,CAAcrG,KAgBnB,wBCtCCsG,GAAkB,WAC3B,OACI,sBAAKlD,UAAU,wBAAf,UACI,iDAAmB,uBAAnB,0BACA,mBAAGA,UAAU,+B,oBCFZmD,GAAe,SAAC,GAAkC,IAAjCvG,EAAgC,EAAhCA,GAAIwG,EAA4B,EAA5BA,KAAMzE,EAAsB,EAAtBA,MAAOtB,EAAe,EAAfA,KAAMe,EAAS,EAATA,IAC3CL,EAAW2B,cACX2D,EAAWC,KAAOF,GASxB,OACI,sBAAKpD,UAAU,2EAA2EO,QATrE,WACrBxC,EAASJ,EACLf,EACA,CACIwG,OAAMzE,QAAOtB,OAAMe,UAK3B,UAEQA,GACA,qBAAK4B,UAAU,yBACX6B,MAAO,CACH0B,eAAgB,QAASC,gBAAgB,OAAD,OAASpF,EAAT,QAIpD,sBAAK4B,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,SAAqCrB,IACrC,mBAAGqB,UAAU,yBAAb,SAAuC3C,OAE3C,sBAAK2C,UAAU,0BAAf,UACI,+BAAOqD,EAASI,OAAO,UACvB,6BAAKJ,EAASI,OAAO,eC3BxBC,GAAiB,WAC1B,IAAOlH,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,SAApCA,MACDmH,EAAWC,OAAOrJ,OAAOiC,GAC/B,OACI,qBAAKwD,UAAU,mBAAf,SAEQ2D,EAASE,KAAI,SAAAjG,GAAI,OACb,cAAC,GAAD,eAAgCA,GAAbA,EAAKhB,UCL/BkH,GAAU,WACnB,IAAM/F,EAAW2B,cACV7E,EAAQ+E,aAAY,SAAAC,GAAK,OAAIA,EAAMnE,QAAnCb,KAOP,OACI,wBAAOmF,UAAU,mBAAjB,UACI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAAQnF,QAEZ,wBAAQmF,UAAU,OAAOO,QAbhB,WACjBxC,ETgDJ,uCAAO,WAAOA,GAAP,SAAA3B,EAAA,sEACGrB,IAASW,OAAOqI,UADnB,OAEHhG,EAASyB,KACTzB,ED6DwB,CAC5BhC,KAAMH,ICjEC,2CAAP,wDSpCY,uBAIJ,sBAAKoE,UAAU,qBAAqBO,QAdrB,WACnBxC,EVNJ,uCAAO,WAAMA,EAAUG,GAAhB,mBAAA9B,EAAA,6DACI+B,EAAOD,IAAWxC,KAAlByC,IACP6F,QAAQC,IAAI9F,GACN+F,EAAU,CACZvF,MAAO,GACPtB,KAAM,GACN+F,MAAM,IAAIe,MAAOC,WANlB,SAQe7I,EAAGc,WAAH,UAAiB8B,EAAjB,mBAAsCkG,IAAKH,GAR1D,OAQG5F,EARH,OASHP,EAASJ,EAAWW,EAAI1B,GAAIsH,IAC5BnG,EAASF,EAAWS,EAAI1B,GAAIsH,IAVzB,2CAAP,0DUmBQ,UACI,mBAAGlE,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAEJ,cAAC,GAAD,QCxBCsE,GAAgB,WACzB,IAAO1C,EAAUhC,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,SAArCoF,OACP,OACI,sBAAK5B,UAAU,0EAAf,UACI,cAAC,GAAD,IACA,+BAES4B,EAAU,cAAC,GAAD,IAAiB,cAAC,GAAD,U,4CCRnC2C,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFF/C,UACGgD,EACD,mBACF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACIhD,UAAY,SAACiD,GAAD,OACPH,EAAoB,cAACC,EAAD,eAAeE,IAAc,cAAC,IAAD,CAAUhE,GAAG,qB,mCCVlEiE,GAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFF/C,UACGgD,EACD,mBACF,OACI,cAAC,IAAD,2BAAWA,GAAX,IACAhD,UAAY,SAACiD,GAAD,OACPH,EAAoB,cAAC,IAAD,CAAU7D,GAAG,MAAS,cAAC8D,EAAD,eAAeE,SCIzDE,GAAY,WACrB,IAAM9G,EAAW2B,cACjB,EAAgCpF,oBAAS,GAAzC,mBAAOwK,EAAP,KAAiBC,EAAjB,KACA,EAAoCzK,oBAAS,GAA7C,mBAAO0K,EAAP,KAAmBC,EAAnB,KAaA,OAZAnC,qBAAU,WACN/H,IAASW,OAAOwJ,mBAAhB,uCAAmC,WAAOhG,GAAP,SAAA9C,EAAA,uDAC/B,OAAG8C,QAAH,IAAGA,OAAH,EAAGA,EAAM/C,MACL4B,EAASoB,EAAMD,EAAK/C,IAAK+C,EAAKE,cAC9B6F,GAAc,GACdlH,EAASD,EAAkBoB,EAAK/C,OAEhC8I,GAAc,GAElBF,GAAY,GARmB,2CAAnC,yDAUD,CAAChH,EAAUgH,EAAaE,IACxBH,EAEK,yCAIJ,cAAC,IAAD,CAAYK,SAAS,IAArB,SACI,eAAC,IAAD,WACI,cAAC,GAAD,CAAa1D,KAAK,QAAQC,UAAWH,EAAYiD,gBAAiBQ,IAClE,cAAC,GAAD,CAAcxD,OAAK,EAACC,KAAK,IAAIC,UAAW4C,GAAeE,gBAAiBQ,IACxE,cAAC,IAAD,CAAUrE,GAAG,sB,kBCvCvBtG,GAAe,CACjBsF,SAAS,EACTkB,SAAU,M,SCFRxG,GAAe,CACjBmC,MAAO,GACPoF,OAAQ,MCENwD,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7B/J,KCPuB,WAAyB,IAAxBmE,EAAuB,uDAAf,GAAI6F,EAAW,uCAC/C,OAAQA,EAAO3J,MACX,KAAKH,EACD,MAAO,CACHuC,IAAKuH,EAAO1J,QAAQmC,IACpBtD,KAAM6K,EAAO1J,QAAQoD,aAE7B,KAAKxD,EACD,MAAO,GACX,QACI,OAAOiE,IDFfC,GFHqB,WAAmC,IAAlCD,EAAiC,uDAAzBxF,GAAcqL,EAAW,uCACvD,OAAQA,EAAO3J,MACX,KAAKH,EACD,OAAO,2BACAiE,GADP,IAEIgB,SAAU6E,EAAO1J,UAEzB,KAAKJ,EACD,OAAO,2BACAiE,GADP,IAEIgB,SAAU,OAElB,KAAKjF,EACD,OAAO,2BACAiE,GADP,IAEIF,SAAS,IAEjB,KAAK/D,EACD,OAAO,2BACAiE,GADP,IAEIF,SAAS,IAEjB,QACI,OAAOE,IEnBfrD,MDLwB,WAAmC,IAAlCqD,EAAiC,uDAAzBxF,GAAcqL,EAAW,uCAC1D,OAAQA,EAAO3J,MACX,KAAKH,EACD,kCACOiE,GADP,IAEI+B,OAAO,eACA8D,EAAO1J,WAGtB,KAAKJ,EACD,OAAO,2BACAiE,GADP,IAEIrD,MAAM,CAAEkJ,EAAO1J,SAAV,oBAAsB6D,EAAMrD,UAEzC,KAAKZ,EACD,OAAO,2BACAiE,GADP,IAEIrD,MAAM,aAAKkJ,EAAO1J,WAE1B,KAAKJ,EACD,OAAO,2BACAiE,GADP,IAEIrD,MAAOqD,EAAMrD,MAAMqH,KACf,SAAAjG,GAAI,OAAIA,EAAKhB,KAAO8I,EAAO1J,QAAQY,GAC7B8I,EAAO1J,QAAQ4B,KAAOA,OAGxC,KAAKhC,EACD,OAAO,2BACAiE,GADP,IAEI+B,OAAQ,KACRpF,MAAOqD,EAAMrD,MAAMmJ,QAAO,SAAA/H,GAAI,OAAIA,EAAKhB,KAAO8I,EAAO1J,aAE7D,KAAKJ,EACD,OAAO,2BACAiE,GADP,IAEI+B,OAAQ,KACRpF,MAAO,KAEf,QACI,OAAOqD,MChCN+F,GAAQC,aACjBL,GACAJ,GACIU,aAAiBC,QEXZC,GAAa,WACtB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,OCJZK,IAASC,OACP,cAAC,GAAD,IACA1D,SAAS2D,eAAe,W","file":"static/js/main.276ecc40.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDY6Tk6HfGl3QjTT3qQaTssyPYFlxJGon0\",\r\n  authDomain: \"react-app-curso-39926.firebaseapp.com\",\r\n  projectId: \"react-app-curso-39926\",\r\n  storageBucket: \"react-app-curso-39926.appspot.com\",\r\n  messagingSenderId: \"174459211723\",\r\n  appId: \"1:174459211723:web:8bf41332f5d261b2c9304e\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n  db,\r\n  googleAuthProvider,\r\n  firebase\r\n}","export const types = {\r\n    login: '[Auth]Login',\r\n    logout: '[Auth]Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesUpdated: '[Notes] Update note saved',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n    notesLoad: '[Notes] Load Notes'\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async(uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n    notesSnap.forEach(snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n    });\r\n    return notes;\r\n}","export const fileUpload = async ( file ) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dlxiunugo/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'reactjournal');\r\n    formData.append('file', file);\r\n    try{\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else{\r\n            throw await resp.json();\r\n        }\r\n    } catch(e) {\r\n        throw e;\r\n    }\r\n}","import { db } from \"../firebase/firebaseConfig\";\r\nimport {types} from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () =>{\r\n    return async(dispatch, getState) => {\r\n        const {uId} = getState().auth;\r\n        console.log(uId)\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        };\r\n        const doc = await db.collection(`${uId}/journal/notes`).add( newNote );\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n};\r\n\r\nexport const setNotes= ( notes ) => (\r\n    {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n);\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async ( dispatch, getState ) => {\r\n        const {uId} = getState().auth;\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n        await db.doc(`${uId}/journal/notes/${note.id}`).update( noteToFirestore );\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n};\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async(dispatch, getState) =>  {\r\n        const {active: activeNote} = getState().notes;\r\n        Swal.fire(\r\n            {\r\n                title: 'Uploading...',\r\n                text: 'Please wait',\r\n                allowOutsideClick: false,\r\n                showConfirmButton: false,\r\n                willOpen: () => {\r\n                    Swal.showLoading();\r\n                }\r\n            }\r\n        )\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote));\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const uId = getState().auth.uId;\r\n        Swal.fire(\r\n            {\r\n                title: 'Removing...',\r\n                text: 'Please wait',\r\n                allowOutsideClick: false,\r\n                showConfirmButton: false,\r\n                willOpen: () => {\r\n                    Swal.showLoading();\r\n                }\r\n            }\r\n        )\r\n        await db.doc(`${uId}/journal/notes/${id}`).delete();\r\n        dispatch(deleteNote(id));\r\n        Swal.close();\r\n        Swal.fire('Note Removed!', '', 'success')\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout= () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import {firebase, googleAuthProvider} from '../firebase/firebaseConfig';\r\nimport {types} from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(({user}) => {\r\n            dispatch( login(user.uid, user.displayName) );\r\n            dispatch( finishLoading() );\r\n        })\r\n        .catch(e => {\r\n            Swal.fire(\r\n                'Error', e.message, 'error'\r\n            );\r\n            dispatch( finishLoading() );\r\n        });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then( async ({user}) => {\r\n            await user.updateProfile({displayName: name});\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        })\r\n        .catch((e) => {\r\n            Swal.fire(\r\n                'Error', e.message, 'error'\r\n            );\r\n        });\r\n    };\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => [\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then(({user}) => {\r\n            dispatch(login(user.uid, user.displayName))\r\n        })\r\n    ]\r\n}\r\n\r\nexport const login = (uId, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uId,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui)\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    };\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn animate__faster\">\r\n                <input type=\"text\" className=\"auth__input\" value={email} onChange={handleInputChange} placeholder=\"Email\" name=\"email\" autoComplete=\"off\"/>\r\n                <input type=\"password\" className=\"auth__input\" placeholder=\"Password\" value={password} onChange={handleInputChange} name=\"password\"/>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading}>Login</button>\r\n                <hr />\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/auth/register\" className=\"link\">Create new Account</Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator'\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Juan',\r\n        email: 'juancruzdillon1999@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    };\r\n    const isFormValid = () => {\r\n        if(name.trim().length <= 0){\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        }else if ( !validator.isEmail( email ) ){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5){\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n                <input type=\"text\" className=\"auth__input\" placeholder=\"Name\" name=\"name\" value={name} autoComplete=\"off\" onChange={handleInputChange}/>\r\n                <input type=\"text\" className=\"auth__input\" placeholder=\"Email\" name=\"email\" value={email} autoComplete=\"off\" onChange={handleInputChange}/>\r\n                <input type=\"password\" className=\"auth__input\" placeholder=\"Password\" value={password} name=\"password\" onChange={handleInputChange}/>\r\n                <input type=\"password\" className=\"auth__input\" placeholder=\"Confirm Password\" value={password2}name=\"password2\" onChange={handleInputChange}/>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">Register</button>\r\n                <Link to=\"/auth/login\" className=\"link mt-5\">Already registered?</Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginScreen}/>,\r\n                    <Route exact path=\"/auth/register\" component={RegisterScreen}/>\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes);\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    };\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    };\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 agosto 2021</span>\r\n            <input type=\"file\" id=\"fileSelector\" name=\"file\" style={{display: 'none'}} onChange={handleFileChange}/>\r\n            <div>\r\n                <button className=\"btn\" onClick={handlePictureClick}>Picture</button>\r\n                <button className=\"btn\" onClick={handleSave}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useRef} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NotesAppBar } from './NotesAppBar';\r\nimport {useForm} from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nexport const NoteScreen = () => {\r\n    const {active: note} = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const {title, body, id} = formValues;\r\n    const dispatch = useDispatch();\r\n\r\n    const activeId = useRef(note.id);\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote(formValues.id, {...formValues}) );\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input type=\"text\" placeholder=\"Awesome title\" name=\"title\" className=\"notes__title-input\" autoComplete=\"off\" value={title} onChange={handleInputChange}/>\r\n                <textarea placeholder=\"what happend?\" name=\"body\"className=\"notes__textarea\" value={body} onChange={handleInputChange}></textarea>\r\n                {\r\n                    (note.url) &&\r\n                        <div className=\"notes__image\">\r\n                            <img src={note.url} alt={note.title}/>\r\n                        </div>\r\n                }\r\n            </div>\r\n            <button className=\"btn btn-danger\" onClick={ handleDelete }>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>Select something<br /> Pr create an entry!</p>\r\n            <i className=\"far fa-star fa-4x mt-5\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(\r\n            id,\r\n            {\r\n                date, title, body, url\r\n            }\r\n        ))\r\n    };\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" onClick={handleEntryClick}>\r\n            {\r\n                url &&\r\n                <div className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover', backgroundImage: `url(${url})`\r\n                    }}>\r\n                </div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">{title}</p>\r\n                <p className=\"journal__entry-content\">{body}</p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    const {notes} = useSelector(state => state.notes);\r\n    const objNotes = Object.values(notes)\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                objNotes.map(note => (\r\n                    <JournalEntry key={note.id} {...note}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n    const handleLogOut = () => {\r\n        dispatch(startLogout())\r\n    }\r\n    const handleAddEntry = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\" />\r\n                    <span> {name}</span>\r\n                </h3>\r\n                <button className=\"btn \" onClick={handleLogOut}>\r\n                    LogOut\r\n                </button>\r\n            </div>\r\n            <div className=\"journal__new-entry\" onClick={handleAddEntry}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"/>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n    const {active} = useSelector(state => state.notes);\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\" >\r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active) ? <NoteScreen /> : <NothingSelected />\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component= {(props)=> (\r\n                (isAuthenticated) ? (<Component {...props} />) : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n        component= {(props) => (\r\n            (isAuthenticated) ?  <Redirect to=\"/\" />: (<Component {...props}/>)\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Switch,\r\n    Redirect,\r\n    HashRouter\r\n} from 'react-router-dom';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport {firebase} from '../firebase/firebaseConfig';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setisLoggedIn] = useState(false);\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setisLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setisLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch, setChecking, setisLoggedIn]);\r\n    if(checking){\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n    return (\r\n        <HashRouter basename=\"/\">\r\n            <Switch>\r\n                <PublicRoute path=\"/auth\" component={AuthRouter} isAuthenticated={isLoggedIn}/>\r\n                <PrivateRoute exact path=\"/\" component={JournalScreen} isAuthenticated={isLoggedIn}/>\r\n                <Redirect to=\"/auth/login\"/>\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: '',\r\n    active: null\r\n}\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducers';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\"\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uId: action.payload.uId,\r\n                name: action.payload.displayName\r\n            };\r\n        case types.logout:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}